import pygame
import random
import time

# Initialize Pygame
pygame.init()

# Screen dimensions
SCREEN_WIDTH = 800
SCREEN_HEIGHT = 600
SCREEN = pygame.display.set_mode((SCREEN_WIDTH, SCREEN_HEIGHT))
pygame.display.set_caption("Snake Game")

# Colors (RGB)
WHITE = (255, 255, 255)
BLACK = (0, 0, 0)
GREEN = (0, 255, 0)
RED = (255, 0, 0)
BLUE = (0, 0, 255)
YELLOW = (255, 255, 0)

# Snake and food size
SNAKE_BLOCK_SIZE = 20
FOOD_SIZE = 20

# Game speed (frames per second)
SNAKE_SPEED = 10

# Font settings
font_style = pygame.font.SysFont("bahnschrift", 25)
score_font = pygame.font.SysFont("comicsansms", 35)

def display_score(score):
    """
    Displays the player's score on the screen.
    """
    value = score_font.render("Score: " + str(score), True, YELLOW)
    SCREEN.blit(value, [0, 0])

def draw_snake(snake_block, snake_list):
    """
    Draws the snake on the screen.
    """
    for x in snake_list:
        pygame.draw.rect(SCREEN, GREEN, [x[0], x[1], snake_block, snake_block], border_radius=5)

def display_message(msg, color):
    """
    Displays game messages (e.g., Game Over) in the center of the screen.
    """
    mesg = font_style.render(msg, True, color)
    SCREEN.blit(mesg, [SCREEN_WIDTH / 6, SCREEN_HEIGHT / 3])

def game_loop():
    """
    The main game loop.
    """
    game_over = False
    game_close = False

    # Initial snake position
    x1 = SCREEN_WIDTH / 2
    y1 = SCREEN_HEIGHT / 2

    # Initial snake movement direction
    x1_change = 0
    y1_change = 0

    # Snake body list
    snake_list = []
    snake_length = 1

    # Initial food position
    food_x = round(random.randrange(0, SCREEN_WIDTH - FOOD_SIZE) / 20.0) * 20.0
    food_y = round(random.randrange(0, SCREEN_HEIGHT - FOOD_SIZE) / 20.0) * 20.0

    # Game speed controller
    clock = pygame.time.Clock()

    while not game_over:
        while game_close:
            # Game over screen
            SCREEN.fill(BLACK)
            display_message("Game Over! Q - Quit, C - Play Again", RED)
            display_score(snake_length - 1)
            pygame.display.update()

            for event in pygame.event.get():
                if event.type == pygame.KEYDOWN:
                    if event.key == pygame.K_q:
                        game_over = True
                        game_close = False
                    if event.key == pygame.K_c:
                        game_loop() # Restart the game

        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                game_over = True
            if event.type == pygame.KEYDOWN:
                # Control snake movement direction
                if event.key == pygame.K_LEFT:
                    x1_change = -SNAKE_BLOCK_SIZE
                    y1_change = 0
                elif event.key == pygame.K_RIGHT:
                    x1_change = SNAKE_BLOCK_SIZE
                    y1_change = 0
                elif event.key == pygame.K_UP:
                    y1_change = -SNAKE_BLOCK_SIZE
                    x1_change = 0
                elif event.key == pygame.K_DOWN:
                    y1_change = SNAKE_BLOCK_SIZE
                    x1_change = 0

        # Check for snake collision with walls
        if x1 >= SCREEN_WIDTH or x1 < 0 or y1 >= SCREEN_HEIGHT or y1 < 0:
            game_close = True

        # Update snake position
        x1 += x1_change
        y1 += y1_change
        SCREEN.fill(BLACK) # Fill the screen with black

        # Draw food
        pygame.draw.rect(SCREEN, RED, [food_x, food_y, FOOD_SIZE, FOOD_SIZE], border_radius=5)

        # Update snake body list
        snake_head = []
        snake_head.append(x1)
        snake_head.append(y1)
        snake_list.append(snake_head)

        # Remove tail segment if snake length exceeds
        if len(snake_list) > snake_length:
            del snake_list[0]

        # Check for snake collision with itself
        for x in snake_list[:-1]: # Check all segments except the head
            if x == snake_head:
                game_close = True

        # Draw the snake
        draw_snake(SNAKE_BLOCK_SIZE, snake_list)
        
        # Display the score
        display_score(snake_length - 1)

        # Update the display
        pygame.display.update()

        # When snake eats food
        if x1 == food_x and y1 == food_y:
            food_x = round(random.randrange(0, SCREEN_WIDTH - FOOD_SIZE) / 20.0) * 20.0
            food_y = round(random.randrange(0, SCREEN_HEIGHT - FOOD_SIZE) / 20.0) * 20.0
            snake_length += 1 # Increase snake length

        # Control game speed
        clock.tick(SNAKE_SPEED)

    pygame.quit() # Uninitialize Pygame
    quit() # Exit the program

# Start the game
game_loop()
